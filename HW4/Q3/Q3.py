import cv2
import numpy as np
import matplotlib.pyplot as plt

#Part1
img1 = cv2.imread('fingerprint.png')
img1 = cv2.cvtColor(img1,cv2.COLOR_BGR2GRAY)

kernel1 = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(3,3))
opening = cv2.morphologyEx(img1, cv2.MORPH_OPEN, kernel1)
closing = cv2.morphologyEx(opening ,cv2.MORPH_CLOSE, kernel1)

plt.figure()
plt.subplot(1,2,1)
plt.imshow(closing, cmap = 'gray')
plt.title('denoised fingeprint')
plt.axis(False)
plt.subplot(1,2,2)
plt.imshow(img1 , cmap = 'gray')
plt.title('fingerprint')
plt.axis(False)
plt.show()

#Part2
img2 = cv2.imread('headCT.png')
img2 = cv2.cvtColor(img2,cv2.COLOR_BGR2GRAY)

kernel2 = np.ones((3,3),dtype=np.uint8)
kernel22=np.ones((7,7),dtype=np.uint8)
gradient = cv2.morphologyEx(img2, cv2.MORPH_GRADIENT, kernel2)
gradient2=cv2.morphologyEx(img2, cv2.MORPH_GRADIENT, kernel22)
plt.figure()
plt.imshow(gradient , cmap = 'gray')
plt.title('gradient with 3')
plt.axis(False)
plt.show()
plt.imshow(gradient2 , cmap = 'gray')
plt.title('gradient with 7')
plt.axis(False)
plt.show()
#second way: dilation-erosion
kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(3,3))
kernel_2= cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(5,5))
erosion = cv2.erode(img2,kernel,iterations = 1)
dilation = cv2.dilate(img2,kernel,iterations = 1)
erosion2 = cv2.erode(img2,kernel_2,iterations = 1)
dilation2 = cv2.dilate(img2,kernel_2,iterations = 1)
img4=-erosion+dilation
plt.imshow(img4 , cmap = 'gray',vmin=0,vmax=255)
plt.axis(False)
plt.title('erosion+dilation')
plt.show()
plt.subplot(2,2,1)
plt.imshow(erosion,cmap='gray',vmin=0,vmax=255)
plt.title('erosion1')
plt.axis(False)
plt.subplot(2,2,3)
plt.imshow(dilation,cmap='gray',vmin=0,vmax=255)
plt.axis(False)
plt.title('dilation1')
plt.subplot(2,2,2)
plt.imshow(erosion2,cmap='gray',vmin=0,vmax=255)
plt.title('erosion2')
plt.axis(False)
plt.subplot(2,2,4)
plt.imshow(dilation2,cmap='gray',vmin=0,vmax=255)
plt.title('dilation2')
plt.axis(False)
plt.show()
#Part3
img3 = cv2.imread('rice.tif')
img3 = cv2.cvtColor(img3,cv2.COLOR_BGR2GRAY)

kernel3 = cv2.getStructuringElement(cv2.MORPH_ELLIPSE,(100,100))
tophat = cv2.morphologyEx(img3, cv2.MORPH_TOPHAT, kernel3)
ret1,th1 = cv2.threshold(tophat,55,255,cv2.THRESH_BINARY)
plt.imshow(th1 , cmap = 'gray')
plt.title('Rice')
plt.axis(False)
plt.show()
